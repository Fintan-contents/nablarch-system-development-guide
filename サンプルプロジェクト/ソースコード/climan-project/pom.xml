<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.nablarch.archetype</groupId>
    <artifactId>nablarch-archetype-parent</artifactId>
    <version>5u18</version>
  </parent>

  <groupId>com.nablarch.example.climan</groupId>
  <artifactId>climan-project</artifactId>
  <version>0.0.2</version>
  <packaging>war</packaging>

  <properties>
    <!-- ソース及びclassファイルが準拠するJavaのバージョン-->
    <java.version>1.8</java.version>

    <!-- 環境ごとのリソースディレクトリ(プロファイルにより切り替わる) -->
    <!--suppress UnresolvedMavenProperty -->
    <env.resources>${project.basedir}/src/env/${env.dir}/resources</env.resources>
    <version.plugins.checkstyle>3.0.0</version.plugins.checkstyle>
    <postgres.jdbc.driver.version>9.4.1211</postgres.jdbc.driver.version>
    <nablarch.tools.dir>${project.basedir}/tools</nablarch.tools.dir>
    <!-- gsp-dba-maven-pluginが使用するデータベース設定 -->
    <nablarch.db.jdbcDriver>org.postgresql.Driver</nablarch.db.jdbcDriver>
    <nablarch.db.url>jdbc:postgresql://localhost:5432/postgres</nablarch.db.url>
    <nablarch.db.adminUser>postgres</nablarch.db.adminUser>
    <nablarch.db.adminPassword>password</nablarch.db.adminPassword>
    <nablarch.db.user>client</nablarch.db.user>
    <nablarch.db.password>password</nablarch.db.password>
    <nablarch.db.schema>client</nablarch.db.schema>
  </properties>

  <reporting>
      <plugins>
          <plugin>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs-maven-plugin</artifactId>
              <version>3.1.3</version>
              <configuration>
                  <xmlOutput>true</xmlOutput>
                  <xmlOutputDirectory>target/site</xmlOutputDirectory>
              </configuration>
          </plugin>
      </plugins>
  </reporting>
  <!--
    このプロファイルは環境を指定するものであり、相互に排他的である。
    複数のプロファイルを同時に指定してはならない。
  -->
  <profiles>
    <!-- 開発環境 -->
    <profile>
      <id>development</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <env.name>開発環境</env.name>
        <!-- Mavenの環境別リソースのディレクトリ名 -->
        <env.dir>dev</env.dir>
        <env.classifier>dev</env.classifier>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.nablarch.framework</groupId>
          <artifactId>nablarch-fw-web-hotdeploy</artifactId>
        </dependency>
        <!-- TODO: プロジェクトで使用するDB製品にあわせたJDBCドライバに修正してください。 -->
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>${postgres.jdbc.driver.version}</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.4</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- 本番環境 -->
    <profile>
      <id>prod</id>
      <properties>
        <env.name>本番環境</env.name>
        <env.dir>prod</env.dir>
        <env.classifier>prod</env.classifier>
      </properties>
    </profile>

    <!--
    Nablarchのマスタデータ復旧機能用にデータを格納する際に使用するプロファイル。
    使用の際は、以下を参照すること。
    https://github.com/coastland/gsp-dba-maven-plugin/blob/master/recipe/backupToDifferentSchema.md

    gsp-dba-pluginでは、H2の場合はデフォルトスキーマのPUBLICしか扱えないためバックアップスキーマ名にPUBLICを指定しています。
    gsp-dba-pluginで任意のスキーマ名を指定出来るDBの場合は、バックアップスキーマ名を指定して下さい。
    -->
    <profile>
      <id>BACKUP</id>
      <properties>
        <env.dir>dev</env.dir>
        <nablarch.db.schema>customer</nablarch.db.schema>
      </properties>
      <build>
        <directory>${dba.gsp-target-dir}</directory>
        <plugins>
          <plugin>
            <groupId>jp.co.tis.gsp</groupId>
            <artifactId>gsp-dba-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>generate-ddl</goal>
                  <goal>execute-ddl</goal>
                  <goal>load-data</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <!-- プロジェクトで使用するDB製品にあわせたJDBCドライバに上書きする -->
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.jdbc.driver.version}</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
            <configuration>
              <extraDdlDirectory>src/test/resources/extraDdl</extraDdlDirectory>
              <dataDirectory>${dba.dataDirectory}</dataDirectory>
              <erdFile>${dba.erdFile}</erdFile>
              <lengthSemantics>CHAR</lengthSemantics>
              <outputDirectory>${dba.gsp-target-dir}/output</outputDirectory>
              <inputDirectory>${dba.gsp-target-dir}/output</inputDirectory>
              <ddlDirectory>${dba.gsp-target-dir}/output</ddlDirectory>
              <diconDir>${dba.gsp-target-dir}/classes</diconDir>
              <rootPackage>${dba.entity.rootPackage}</rootPackage>
              <entityPackageName>${dba.entity.entityPackage}</entityPackageName>
              <useAccessor>true</useAccessor>
              <javaFileDestDir>${dba.entity.javaFileDestDir}</javaFileDestDir>
              <driver>${nablarch.db.jdbcDriver}</driver>
              <url>${nablarch.db.url}</url>
              <adminUser>${nablarch.db.adminUser}</adminUser>
              <adminPassword>${nablarch.db.adminPassword}</adminPassword>
              <user>${nablarch.db.user}</user>
              <password>${nablarch.db.password}</password>
              <schema>${nablarch.db.schema}</schema>
              <!-- 以下はimport-schemaゴール用のパラメータ -->
              <artifactId>${dba.testDataArtifactId}</artifactId>
            </configuration>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
          </plugin>
          <plugin>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- gsp-dba-plugin -->
    <profile>
      <id>gsp</id>
      <activation>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <configuration>
                <!-- entityとdomainをカバレッジ対象から外す -->
                <excludes>
                  <exclude>com/nablarch/example/climan/entity/**</exclude>
                </excludes>
              </configuration>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${version.plugins.surefire}</version>
              <configuration>
                <trimStackTrace>false</trimStackTrace>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <version>3.7.1</version>
              <executions>
                <execution>
                  <id>attach-descriptor</id>
                  <goals>
                    <goal>attach-descriptor</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        <directory>${dba.gsp-target-dir}</directory>
        <plugins>
          <plugin>
            <groupId>jp.co.tis.gsp</groupId>
            <artifactId>gsp-dba-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>generate-ddl</goal>
                  <goal>execute-ddl</goal>
                  <goal>generate-entity</goal>
                  <goal>load-data</goal>
                  <!--<goal>export-schema</goal>-->
                </goals>
              </execution>
            </executions>
            <dependencies>
              <!-- プロジェクトで使用するDB製品にあわせたJDBCドライバに上書きする -->
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.jdbc.driver.version}</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
            <configuration>
              <extraDdlDirectory>src/test/resources/extraDdl</extraDdlDirectory>
              <dataDirectory>${dba.dataDirectory}</dataDirectory>
              <erdFile>${dba.erdFile}</erdFile>
              <lengthSemantics>CHAR</lengthSemantics>
              <outputDirectory>${dba.gsp-target-dir}/output</outputDirectory>
              <inputDirectory>${dba.gsp-target-dir}/output</inputDirectory>
              <ddlDirectory>${dba.gsp-target-dir}/output</ddlDirectory>
              <diconDir>${dba.gsp-target-dir}/classes</diconDir>
              <rootPackage>${dba.entity.rootPackage}</rootPackage>
              <entityPackageName>${dba.entity.entityPackage}</entityPackageName>
              <useAccessor>true</useAccessor>
              <javaFileDestDir>${dba.entity.javaFileDestDir}</javaFileDestDir>
              <driver>${nablarch.db.jdbcDriver}</driver>
              <url>${nablarch.db.url}</url>
              <adminUser>${nablarch.db.adminUser}</adminUser>
              <adminPassword>${nablarch.db.adminPassword}</adminPassword>
              <user>${nablarch.db.user}</user>
              <password>${nablarch.db.password}</password>
              <schema>${nablarch.db.schema}</schema>
              <!-- 以下はimport-schemaゴール用のパラメータ -->
              <artifactId>${dba.testDataArtifactId}</artifactId>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.nablarch.profile</groupId>
        <artifactId>nablarch-bom</artifactId>
        <version>5u18</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>
    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-main-default-configuration</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing-rest</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing-jetty6</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-testing-default-configuration</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.integration</groupId>
      <artifactId>nablarch-jersey-adaptor</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.integration</groupId>
      <artifactId>nablarch-router-adaptor</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-web</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-core-validation-ee</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-core-beans</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-dao</artifactId>
    </dependency>

    <!-- コード管理機能 -->
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-code-jdbc</artifactId>
    </dependency>
    <!-- UniversalDao使用時、DBに自動採番型が存在しない場合に使用するモジュールが存在している。 -->
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-idgenerator-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.10.3</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>5.1.3.Final</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Nablarchのテスティングフレームワークを実行するために必要なライブラリ -->
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-batch</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-messaging</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-messaging-http</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path-assert</artifactId>
      <version>2.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>1.5.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${env.resources}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.sql</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.plugins.checkstyle}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.11</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- Checkstyle設定ファイルへのパス -->
          <configLocation>${nablarch.tools.dir}/static-analysis/checkstyle/nablarch-checkstyle.xml</configLocation>
          <!-- Checkstyle除外対象の設定ファイルへのパス -->
          <suppressionsLocation>${nablarch.tools.dir}/static-analysis/checkstyle/suppressions.xml</suppressionsLocation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>3.1.3</version>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>3.1.3</version>
          </dependency>
        </dependencies>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <!-- チェックを除外するフィルターファイル -->
          <excludeFilterFile>${nablarch.tools.dir}/static-analysis/spotbugs/spotbugs_exclude_for_production.xml</excludeFilterFile>
          <!-- 使用不許可APIチェックツールの設定ファイル -->
          <jvmArgs>-Dnablarch-findbugs-config=${nablarch.tools.dir}/static-analysis/spotbugs/published-config/production</jvmArgs>
          <!-- ヒープサイズが足りない場合は増やすことも可能 -->
          <maxHeap>1024</maxHeap>
          <plugins>
            <plugin>
              <groupId>com.nablarch.framework</groupId>
              <artifactId>nablarch-testing</artifactId>
              <version>1.2.0</version>
            </plugin>
          </plugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.unit8.waitt</groupId>
        <artifactId>waitt-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <port>9080</port>
          <servers>
            <server>
              <groupId>net.unit8.waitt.server</groupId>
              <artifactId>waitt-tomcat8</artifactId>
              <version>1.2.1</version>
            </server>
          </servers>
        </configuration>
      </plugin>
      <!-- ================ここから任意で使用するツールの設定================ -->
      <!-- gsp-dba-maven-pluginで自動生成したソースをビルド時に使用するための設定 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <!-- カバレッジ取得 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- ================ここまで任意で使用するツールの設定================ -->
    </plugins>
  </build>
</project>
