
# JNDIでDataSourceを取得する際のリソース名
# 開発環境ではDataSourceを直接使うため使われない。
# Nablarchの仕様上値がないとエラーになるためダミーの値を設定。
nablarch.connectionFactory.jndiResourceName=dummy

# JDBC接続ドライバクラス(DataSourceを直接使用する際の項目)
# (TODO: 開発環境で使用するDBに合わせて変更する。)
nablarch.db.jdbcDriver=org.postgresql.Driver

# JDBC接続URL(DataSourceを直接使用する際の項目)
# (TODO: 開発環境用の接続先に変更する。H2の接続URLは、データファイルの所在とユーザ名で決定される。変更する際は、理解したうえで変更すること)
nablarch.db.url=jdbc:postgresql://localhost:5432/postgres

# DB接続ユーザ名(DataSourceを直接使用する際の項目)
# (TODO: 開発環境用のユーザ名に変更する)
nablarch.db.user=postgres

# DB接続パスワード(DataSourceを直接使用する際の項目)
# (TODO: 開発環境用のパスワードに変更する)
nablarch.db.password=password

# DBスキーマ名(DataSourceを直接使用する際の項目)
# (TODO: 自動テスト用のスキーマ名に変更する。H2使用時は「PUBLIC」を設定すること)
nablarch.db.schema=public

# 最大プールサイズ(DataSourceを直接使用する際の項目)
nablarch.db.maxPoolSize=5

# 初期プールサイズ(DataSourceを直接使用する際の項目)
nablarch.db.initialPoolSize=5

# コードの初期ロード設定
# (本番ではレスポンスを重視し初期ロードを実施する。開発環境では起動速度を重視し初期ロードはしない。)
nablarch.codeCache.loadOnStartUp=false

# ルートマッピング定義の再読み込みの設定。以下タイミングで再読み込みを行う。
# ・最後にルートマッピングを読み込んでから、本値(秒)の時間経過していること。
# ・上記を満たした状態で、URLとActionのマッピング処理が発生したとき
# (本番ではパフォーマンスを重視し、0を設定する。0の場合は、自動再読み込みは行わない)
nablarch.routesMapping.checkInterval=5

# フォーマット定義ファイルの格納ディレクトリ
# (TODO: PJのファイルパスに変更する)
nablarch.filePathSetting.basePathSettings.format=file:./src/main/format

# 出力ファイルの出力先ディレクトリ
# (TODO: PJのファイルパスに変更する)
nablarch.filePathSetting.basePathSettings.output=file:./work/output

# アップロードファイルの自動クリーニングを行うかどうか
# (ディスクを逼迫するので本番環境ではtrue。開発環境ではファイルを確認できるようにfalseとする。)
nablarch.uploadSettings.autoCleaning=false

# アップロードファイル一時ディレクトリ
# (TODO: PJのファイルパスに変更する)
nablarch.filePathSetting.basePathSettings.uploadFileTmpDir=file:./work/tmp
