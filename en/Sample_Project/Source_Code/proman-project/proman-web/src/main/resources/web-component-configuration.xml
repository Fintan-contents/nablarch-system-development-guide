<?xml version="1.0" encoding="UTF-8"?>

<component-configuration
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tis.co.jp/nablarch/component-configuration"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  https://nablarch.github.io/schema/component-configuration.xsd">

  <!-- Table definitions -->
  <import file="nablarch/schema-config.xml" />

  <!-- Character set definitions used for scanning -->
  <import file="nablarch/core/validation/charset-definition.xml"/>

  <!-- proman-common setting -->
  <import file="com/nablarch/example/proman/common.xml"/>

  <!-- BeanValidation implementation class -->
  <component name="validationStrategy" class="nablarch.common.web.validator.BeanValidationStrategy" />

  <!-- Environment settings file -->
  <config-file file="common.config" />
  <config-file file="env.config" />

  <!-- Validation -->
  <import file="com/nablarch/example/proman/web/validation/validation.xml" />

  <!-- Password encryption module setting -->
  <!-- Loads settings for each project. -->
  <import file="com/nablarch/example/proman/web/common/authentication/passwordEncryptor.xml" />

  <!-- Authentication settings -->
  <!-- Loads settings for each project. -->
  <import file="com/nablarch/example/proman/web/common/authentication/authenticator.xml" />

  <!-- Common Nablarch features -->
  <!-- Code features -->
  <import file="nablarch/common/code.xml"/>
  <!-- RDBMS without automatic numbering, setting to use universal DAO -->
  <import file="nablarch/common/dao.xml" />

  <!-- Loads web-specific settings -->
  <!-- Database settings -->
  <!--
  The following settings file is used to look up connections using JNDI
  Set "nablarch.connectionFactory.jndiResourceName" as a placeholder for the name to be used for looking up in the config file.

  When acquiring a connection from a local data source, refer to db-for-webui_dev.xml in the next project generated from the archetype.
  -->
  <import file="nablarch/webui/db-for-webui.xml"/>

  <!-- Error page settings -->
  <import file="nablarch/webui/error-page-for-webui.xml" />

  <!-- File path installation -->
  <import file="nablarch/webui/filepath-for-webui.xml" />

  <!-- Definition of interceptor execution order -->
  <import file="nablarch/webui/interceptors.xml" />

  <!-- File upload feature settings -->
  <import file="nablarch/webui/multipart.xml" />

  <!-- Custom tag settings -->
  <import file="nablarch/webui/nablarch-tag.xml" />

  <!-- Double submission prevention feature -->
  <import file="nablarch/webui/double-submission.xml" />

  <!-- Request ID without a hidden encryption feature -->
  <list name="noHiddenEncryptionRequestIds">
    <!-- <value></value> -->
  </list>

  <!-- Package mapping settings -->
  <component name="packageMapping"
             class="nablarch.integration.router.RoutesMapping">
      <property name="routes" value="routes.xml"/>
      <property name="baseUri" value="" />
      <property name="checkInterval" value="${nablarch.routesMapping.checkInterval}"/>
      <property name="basePackage" value="${nablarch.commonProperty.basePackage}" />
  </component>

  <!-- Session store feature -->
  <import file="nablarch/webui/session-store.xml" />
  <!-- TODO: If redundancy is set in the application server, explicitly set a key for encryption and restoration as a property for components used in the encryption of hidden stores. -->
  <!--
  <component name="hiddenStoreEncryptor" class="nablarch.common.encryption.AesEncryptor">
    <property name="key" value="1234567890123456" />
    <property name="iv" value="6543210987654321" />
  </component>
  -->

  <component name="httpErrorHandler" class="nablarch.fw.web.handler.HttpErrorHandler" >
    <property name="defaultPages">
      <map>
        <!-- TODO: Create an applicable error screen when setting this. Modify web.xml at the same time. -->
        <entry key="4.." value="/WEB-INF/view/errorPages/USER_ERROR.jsp" />
        <entry key="403" value="/WEB-INF/view/errorPages/PERMISSION-ERROR.jsp" />
        <entry key="404" value="/WEB-INF/view/errorPages/PAGE_NOT_FOUND_ERROR.jsp" />
        <entry key="413" value="/WEB-INF/view/errorPages/REQUEST_ENTITY_TOO_LARGE.jsp" />
        <entry key="5.." value="/WEB-INF/view/errorPages/ERROR.jsp" />
        <entry key="503" value="/WEB-INF/view/errorPages/SERVICE-UNAVAILABLE-ERROR.jsp" />
      </map>
    </property>
  </component>

  <!-- Dialect settings -->
  <!-- TODO: Set dialect according to the database being used -->
  <component name="dialect" class="nablarch.core.db.dialect.PostgreSQLDialect" />

  <import file="nablarch/webui/threadcontext-for-webui.xml"/>

  <!-- Handler queue configuration -->
  <component name="webFrontController"
             class="nablarch.fw.web.servlet.WebFrontController">

    <property name="handlerQueue">
      <list>
        <component class="nablarch.fw.web.handler.HttpCharacterEncodingHandler"/>

        <component class="nablarch.fw.handler.GlobalErrorHandler"/>

        <!-- Add -->
        <component class="nablarch.common.handler.threadcontext.ThreadContextClearHandler"/>

        <component class="nablarch.fw.web.handler.HttpResponseHandler"/>

        <component class="nablarch.fw.web.handler.SecureHandler" />

        <component-ref name="multipartHandler"/>

        <component-ref name="sessionStoreHandler" />

        <!-- Add -->
        <component-ref name="threadContextHandler"/>

        <!-- Add -->
        <component class="nablarch.common.web.handler.HttpAccessLogHandler"/>

        <component class="nablarch.fw.web.handler.NormalizationHandler" />

        <component class="nablarch.fw.web.handler.ForwardingHandler"/>

        <component-ref name="httpErrorHandler" />

        <component-ref name="nablarchTagHandler"/>

        <component-ref name="dbConnectionManagementHandler"/>

        <component-ref name="transactionManagementHandler"/>

        <component class="com.nablarch.example.proman.web.common.handler.PromanErrorForwardHandler"/>

        <component class="com.nablarch.example.proman.web.common.handler.LoginUserPrincipalCheckHandler"/>
        
        <component-ref name="packageMapping"/>
      </list>
    </property>
  </component>


  <!-- Components requiring initialization -->
  <component name="initializer"
             class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <component-ref name="codeLoader" />
        <component-ref name="codeCache"/>
        <!-- web/session-store.xml: Database store-->
        <component-ref name="dbStore" />
        <!-- Package mapping -->
        <component-ref name="packageMapping"/>
      </list>
    </property>
  </component>

  <!-- Double submission configuration -->
  <component name="doubleSubmissionHandler"
             class="nablarch.common.web.token.BasicDoubleSubmissionHandler">
    <!-- Resource path for transition destination when double submission is judged to have occurred -->
    <property name="path" value="/WEB-INF/view/errorPages/DOUBLE_SUBMISSION_ERROR.jsp" />
    <!-- Message ID to be used for the error message displayed in the screen to which the system navigates when double submission is judged to have occurred. -->
    <!--<property name="messageId" value="DOUBLE_SUBMISSION_ERROR" />-->
    <!-- Response status used when double submission is judged to have occurred. The default is 400. -->
    <property name="statusCode" value="400" />
  </component>

</component-configuration>
